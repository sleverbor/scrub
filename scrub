#!/usr/bin/ruby

require 'json'

if ARGV.size != 2
    puts "Usage:   scrub fields-file input-file"
    return
end

class Scrubber
 ALPHANUMERICS = /[A-Za-z0-9]/

 attr_accessor :sensitive_fields

 def initialize(fields = [])
  @sensitive_fields = fields
 end

 def scrub(v,force = false)
  case v
  when nil
   v
  when String
   v.gsub(ALPHANUMERICS,'*') 
  when Numeric
   v.to_s.gsub(ALPHANUMERICS,'*')
  when Array
   v.map{|x|scrub(x, force)}
  when Hash
   v.each do |key,val|
    new_value = if (sensitive_fields.include?(key.to_s) || force)
     scrub(val, true)
    elsif val.is_a?(Enumerable)
     scrub(val)
    else
     val
    end
    v[key]=new_value
   end
   v
  else #boolean
   '-'
  end
 end

 def scrub_file(path)
  scrub(JSON.parse(File.read(path)))
 end
end

fields_file_path = ARGV.first
input_file_path = ARGV.last
scrubber = Scrubber.new(File.read(fields_file_path).split)
puts scrubber.scrub_file(input_file_path)

